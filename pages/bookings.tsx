import AccessTimeRoundedIcon from "@mui/icons-material/AccessTimeRounded";
import CloseSharpIcon from "@mui/icons-material/CloseSharp";
import { Backdrop, CircularProgress } from "@mui/material";
import Snackbar from "@mui/material/Snackbar";
import axios from "axios";
import { parseJSON } from "date-fns";
import moment from "moment";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useState } from "react";
import Loader from "react-loader-spinner";
import { QueryClient, useMutation, useQuery } from "react-query";

import Shell from "@components/Shell";

const Bookings = () => {
  const router = useRouter();

  const [_isLoading, setIsLoading] = useState(false);
  const [successMsg, setSuccessMsg] = useState<string>("");
  const [errorMsg, setErrorMsg] = useState<string>("");
  // Method for fetching all events
  const FetchEvents = async () => {
    const { data } = await axios.get("/api/events");
    return data;
  };
  const { data: events, isLoading } = useQuery("events", FetchEvents);

  if (isLoading) {
    return (
      <Backdrop open={isLoading} className="z-40">
        <CircularProgress size={60} style={{ color: "white" }} />
      </Backdrop>
    );
  }

  return (
    <Shell>
      <div className="flex flex-row items-start justify-between">
        <Head>
          <title>Bookings | Cal.com</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="h-screen w-[100%] bg-secondary p-12 flex flex-col">
          <div className="flex flex-col items-start justify-center">
            <span className="text-base font-bold">Bookings</span>
            <span className="text-gray-500">
              See upcoming and past events booked through your event type links.
            </span>
          </div>
          <div className="flex flex-row items-center w-full h-auto my-5 border-b-2 border-gray-400">
            <ul className="flex flex-row items-center">
              <li className="pb-3 border-b-4 border-gray-900 mr-15">
                <a href="#">Upcoming</a>
              </li>
              <li className="pb-3 mx-5">
                <a href="#">Past</a>
              </li>
              <li className="pb-3 mx-5">
                <a href="#">Cancelled</a>
              </li>
            </ul>
          </div>
          <div className="w-full h-px bg-primary" />
          {events.data.length > 0 &&
            events.data.map((event: any) => (
              <div
                className="flex flex-row items-center justify-between w-full px-5 py-5 mt-10 bg-white border-2 border-secondary"
                key={event.id}>
                <div className="flex flex-col justify-between cursor-pointer">
                  <div className="flex flex-row my-2 text-xs">
                    <span className="font-bold">{event.date}</span>
                    <span className="ml-3 font-semibold">
                      {event.eventType.name} between {event.name} and {event.eventType.user.name}
                    </span>
                  </div>
                  <div className="flex flex-row items-center justify-start my-2 text-xs">
                    <span className="ml-1 mr-3 text-gray-300">{event.time}-</span>

                    <span className="ml-1 text-gray-300">{event.time}</span>
                  </div>
                </div>
                <div className="flex flex-row justify-between">
                  <button
                    type="button"
                    onClick={() => {
                      router.push({
                        pathname: `/${event.eventType.user.name
                          .split(" ")[0]
                          .toLocaleLowerCase()}${event.eventType.user.name
                          .split(" ")[1]
                          .toLocaleLowerCase()}/${event.eventType.slug}`,
                      });
                    }}
                    className="flex items-center justify-center px-3 py-2 mx-5 border-2 border-secondary">
                    <CloseSharpIcon width={15} height={15} className="mr-2" /> Cancel
                  </button>
                  <button
                    type="button"
                    onClick={() => {
                      router.push({
                        pathname: `/${event.eventType.user.name
                          .split(" ")[0]
                          .toLocaleLowerCase()}${event.eventType.user.name
                          .split(" ")[1]
                          .toLocaleLowerCase()}/${event.eventType.slug}`,
                      });
                    }}
                    className="flex items-center justify-center px-3 py-2 mx-5 border-2 border-secondary">
                    <AccessTimeRoundedIcon width={15} height={15} className="mr-2" />
                    Reschedule
                  </button>
                </div>
              </div>
            ))}
        </div>
      </div>
    </Shell>
  );
};

export default Bookings;
