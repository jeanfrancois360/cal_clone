import AccessTimeTwoToneIcon from "@mui/icons-material/AccessTimeTwoTone";
import KeyboardArrowDownOutlinedIcon from "@mui/icons-material/KeyboardArrowDownOutlined";
import PublicTwoToneIcon from "@mui/icons-material/PublicTwoTone";
import { Backdrop, CircularProgress } from "@mui/material";
import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState, useEffect } from "react";
import { useQuery } from "react-query";

import CustomDay from "@components/common/CustomDatePicker";

const BookEvent = () => {
  const router = useRouter();
  const [value, setValue] = useState<Date | null>(new Date());
  const [isSelectedValue, setIsSelectedValue] = useState(false);
  const [time, setTime] = useState(["04:00 pm", "04:15 pm", "04:30 pm"]);

  const slug = router.query["event-type-slug"];

  const getEventType = async () => {
    if (slug !== "") {
      const { data } = await axios.get(`/api/event-types/quick-chat`);
      return data;
    }
  };

  const { data: event_types, isLoading, isFetched } = useQuery("event_types", getEventType);

  useEffect(() => {
    setIsSelectedValue(true);
  }, [value]);

  if (isLoading) {
    return (
      <Backdrop open={isLoading} className="z-40">
        <CircularProgress size={60} style={{ color: "white" }} />
      </Backdrop>
    );
  }

  return (
    <div className="flex items-center justify-center w-screen h-screen bg-secondary">
      <Head>
        <title>15min | Jean Francois | Cal.com</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${
          isSelectedValue ? "w-[80%]" : "w-[60%]"
        }  h-[60%] bg-white border-8 border-secondary flex flex-row justify-between items-center`}>
        <div className="mx-5 border-r-2 border-secondary w-[30%] h-[90%] flex flex-col items-start">
          <span className="text-gray-500">Jean Francois</span>
          <span className="text-base font-bold">15 Min Meeting</span>
          <div className="flex flex-row items-center justify-center mt-5 text-gray-500">
            <AccessTimeTwoToneIcon className="mr-3" />
            <span>15 minutes</span>
          </div>
          <div className="flex flex-row items-center justify-center mt-2 text-gray-500 cursor-pointer">
            <PublicTwoToneIcon className="mr-3" />
            <span className="mr-3 ">Africa/Kigali</span>
            <KeyboardArrowDownOutlinedIcon />
          </div>
        </div>
        <div className={`${isSelectedValue ? "w-[40%]" : "w-[70%]"} h-full justify-center items-center flex`}>
          <CustomDay value={value} setValue={setValue} />
        </div>
        {isSelectedValue && (
          <div className="mx-5 border-l-2 border-secondary w-[30%] h-[90%] flex flex-col items-start pl-16">
            <span className="my-3">{value?.toDateString()}</span>
            {time.length &&
              time.map((slug, index) => (
                <button
                  className="px-3 py-2 border-2 border-black w-[80%] hover:bg-primary hover:text-white flex justify-center items-center cursor-pointer my-2"
                  key={index}
                  type="button"
                  onClick={() => {
                    router.push({
                      pathname: `/${event_types.data.user.name
                        .split(" ")[0]
                        .toLocaleLowerCase()}${event_types.data.user.name
                        .split(" ")[1]
                        .toLocaleLowerCase()}/book`,
                      query: { eventTypeId: event_types.data.slug, date: `${value}`, time: `${slug}` },
                    });
                  }}>
                  {slug}
                </button>
              ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default BookEvent;
